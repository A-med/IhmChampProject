<?php

namespace Proxies\__CG__\IIT\IhmBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Equipe extends \IIT\IhmBundle\Entity\Equipe implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'id', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'designation', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'adresselocal', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'typeequipe', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'j', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'g', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'n', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'p', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'logo');
        }

        return array('__isInitialized__', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'id', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'designation', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'adresselocal', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'typeequipe', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'j', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'g', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'n', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'p', '' . "\0" . 'IIT\\IhmBundle\\Entity\\Equipe' . "\0" . 'logo');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Equipe $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setDesignation($designation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesignation', array($designation));

        return parent::setDesignation($designation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDesignation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesignation', array());

        return parent::getDesignation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresselocal($adresselocal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresselocal', array($adresselocal));

        return parent::setAdresselocal($adresselocal);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresselocal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresselocal', array());

        return parent::getAdresselocal();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeequipe($typeequipe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeequipe', array($typeequipe));

        return parent::setTypeequipe($typeequipe);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeequipe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeequipe', array());

        return parent::getTypeequipe();
    }

    /**
     * {@inheritDoc}
     */
    public function getJ()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJ', array());

        return parent::getJ();
    }

    /**
     * {@inheritDoc}
     */
    public function getG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getG', array());

        return parent::getG();
    }

    /**
     * {@inheritDoc}
     */
    public function getN()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getN', array());

        return parent::getN();
    }

    /**
     * {@inheritDoc}
     */
    public function getP()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getP', array());

        return parent::getP();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', array());

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setJ($j)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJ', array($j));

        return parent::setJ($j);
    }

    /**
     * {@inheritDoc}
     */
    public function setG($g)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setG', array($g));

        return parent::setG($g);
    }

    /**
     * {@inheritDoc}
     */
    public function setN($n)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setN', array($n));

        return parent::setN($n);
    }

    /**
     * {@inheritDoc}
     */
    public function setP($p)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setP', array($p));

        return parent::setP($p);
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo($logo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', array($logo));

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
